<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="main_8c" kind="file">
    <compoundname>main.c</compoundname>
    <includes local="no">stdio.h</includes>
    <incdepgraph>
      <node id="0">
        <label>06-pointers/main.c</label>
        <link refid="main.c"/>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="main_8c_1a549befee3353646289436dda452277d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void function1</definition>
        <argsstring>()</argsstring>
        <name>function1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Repos/C-Tutorial/visual studio/06-pointers/06-pointers/main.c" line="9" column="1" bodyfile="D:/Repos/C-Tutorial/visual studio/06-pointers/06-pointers/main.c" bodystart="36" bodyend="40"/>
        <referencedby refid="main_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8c" startline="17" endline="31">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a135da1264ec7c00b8de1f1b9147d3146" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void function2</definition>
        <argsstring>()</argsstring>
        <name>function2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Repos/C-Tutorial/visual studio/06-pointers/06-pointers/main.c" line="10" column="1" bodyfile="D:/Repos/C-Tutorial/visual studio/06-pointers/06-pointers/main.c" bodystart="45" bodyend="58"/>
        <referencedby refid="main_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8c" startline="17" endline="31">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8c_1ad4420fbfa179acc83a8bdd096c973bdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void function3</definition>
        <argsstring>()</argsstring>
        <name>function3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Repos/C-Tutorial/visual studio/06-pointers/06-pointers/main.c" line="11" column="1" bodyfile="D:/Repos/C-Tutorial/visual studio/06-pointers/06-pointers/main.c" bodystart="63" bodyend="75"/>
        <referencedby refid="main_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8c" startline="17" endline="31">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8c_1aca2fa6e3b167a9cbdee5daa034b62184" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void function4</definition>
        <argsstring>(int value1, int value2)</argsstring>
        <name>function4</name>
        <param>
          <type>int</type>
          <declname>value1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Repos/C-Tutorial/visual studio/06-pointers/06-pointers/main.c" line="12" column="1" bodyfile="D:/Repos/C-Tutorial/visual studio/06-pointers/06-pointers/main.c" bodystart="80" bodyend="84"/>
        <referencedby refid="main_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8c" startline="17" endline="31">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a2be2220f009becf48eeee2c6fc480f5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void function5</definition>
        <argsstring>(int value1, int value2, int(*opp)(int, int))</argsstring>
        <name>function5</name>
        <param>
          <type>int</type>
          <declname>value1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value2</declname>
        </param>
        <param>
          <type>int(*)(int, int)</type>
          <declname>opp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Repos/C-Tutorial/visual studio/06-pointers/06-pointers/main.c" line="13" column="1" bodyfile="D:/Repos/C-Tutorial/visual studio/06-pointers/06-pointers/main.c" bodystart="89" bodyend="93"/>
        <referencedby refid="main_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8c" startline="17" endline="31">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8c_1ad3090520f83f07c8745e95ccd4903106" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int add</definition>
        <argsstring>(int num1, int num2)</argsstring>
        <name>add</name>
        <param>
          <type>int</type>
          <declname>num1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Repos/C-Tutorial/visual studio/06-pointers/06-pointers/main.c" line="14" column="1" bodyfile="D:/Repos/C-Tutorial/visual studio/06-pointers/06-pointers/main.c" bodystart="95" bodyend="98"/>
        <referencedby refid="main_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8c" startline="17" endline="31">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a2d6431c1cdb15536766d324b8799b2ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sub</definition>
        <argsstring>(int num1, int num2)</argsstring>
        <name>sub</name>
        <param>
          <type>int</type>
          <declname>num1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Repos/C-Tutorial/visual studio/06-pointers/06-pointers/main.c" line="15" column="1" bodyfile="D:/Repos/C-Tutorial/visual studio/06-pointers/06-pointers/main.c" bodystart="100" bodyend="103"/>
        <referencedby refid="main_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8c" startline="17" endline="31">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Repos/C-Tutorial/visual studio/06-pointers/06-pointers/main.c" line="17" column="1" bodyfile="D:/Repos/C-Tutorial/visual studio/06-pointers/06-pointers/main.c" bodystart="17" bodyend="31"/>
        <references refid="main_8c_1ad3090520f83f07c8745e95ccd4903106" compoundref="main_8c" startline="95" endline="98">add</references>
        <references refid="main_8c_1a549befee3353646289436dda452277d2" compoundref="main_8c" startline="36" endline="40">function1</references>
        <references refid="main_8c_1a135da1264ec7c00b8de1f1b9147d3146" compoundref="main_8c" startline="45" endline="58">function2</references>
        <references refid="main_8c_1ad4420fbfa179acc83a8bdd096c973bdf" compoundref="main_8c" startline="63" endline="75">function3</references>
        <references refid="main_8c_1aca2fa6e3b167a9cbdee5daa034b62184" compoundref="main_8c" startline="80" endline="84">function4</references>
        <references refid="main_8c_1a2be2220f009becf48eeee2c6fc480f5e" compoundref="main_8c" startline="89" endline="93">function5</references>
        <references refid="main_8c_1a2d6431c1cdb15536766d324b8799b2ea" compoundref="main_8c" startline="100" endline="103">sub</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">C-Tutorail<sp/>in<sp/>visual<sp/>studio</highlight></codeline>
<codeline lineno="3"><highlight class="comment">Pointer</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a549befee3353646289436dda452277d2" kindref="member">function1</ref>();</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a135da1264ec7c00b8de1f1b9147d3146" kindref="member">function2</ref>();</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8c_1ad4420fbfa179acc83a8bdd096c973bdf" kindref="member">function3</ref>();</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8c_1aca2fa6e3b167a9cbdee5daa034b62184" kindref="member">function4</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value2);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a2be2220f009becf48eeee2c6fc480f5e" kindref="member">function5</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(*opp)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8c_1ad3090520f83f07c8745e95ccd4903106" kindref="member">add</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num2);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a2d6431c1cdb15536766d324b8799b2ea" kindref="member">sub</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num2);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="main_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>()</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8c_1a549befee3353646289436dda452277d2" kindref="member">function1</ref>();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8c_1a135da1264ec7c00b8de1f1b9147d3146" kindref="member">function2</ref>();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8c_1ad4420fbfa179acc83a8bdd096c973bdf" kindref="member">function3</ref>();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>void(*functionPtr)(int,<sp/>int);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>functionPtr<sp/>=<sp/>&amp;<ref refid="main_8c_1aca2fa6e3b167a9cbdee5daa034b62184" kindref="member">function4</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>(*functionPtr)(100,<sp/>200);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8c_1a2be2220f009becf48eeee2c6fc480f5e" kindref="member">function5</ref>(10,<sp/>20,<sp/>&amp;<ref refid="main_8c_1ad3090520f83f07c8745e95ccd4903106" kindref="member">add</ref>);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8c_1a2be2220f009becf48eeee2c6fc480f5e" kindref="member">function5</ref>(10,<sp/>20,<sp/>&amp;<ref refid="main_8c_1a2d6431c1cdb15536766d324b8799b2ea" kindref="member">sub</ref>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>function1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="main_8c_1a549befee3353646289436dda452277d2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a549befee3353646289436dda452277d2" kindref="member">function1</ref>()</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>var;<sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;The<sp/>address<sp/>is:<sp/>%p\n&quot;</highlight><highlight class="normal">,<sp/>&amp;var);<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>function2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="main_8c_1a135da1264ec7c00b8de1f1b9147d3146" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a135da1264ec7c00b8de1f1b9147d3146" kindref="member">function2</ref>()</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>var<sp/>=<sp/>10;<sp/><sp/><sp/></highlight><highlight class="comment">//Regular<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Var&apos;s<sp/>value<sp/>is<sp/>now:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>var);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>pointer<sp/>=<sp/>NULL;<sp/><sp/><sp/></highlight><highlight class="comment">//Pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>pointer<sp/>=<sp/>&amp;var;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Storing<sp/>of<sp/>var<sp/>memory<sp/>location</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;pointer<sp/>location:<sp/>%p\n&quot;</highlight><highlight class="normal">,<sp/>pointer);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>*pointer<sp/>=<sp/>20;<sp/><sp/></highlight><highlight class="comment">//Pointer<sp/>is<sp/>now<sp/>effecivly<sp/>&apos;var&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Var&apos;s<sp/>value<sp/>is<sp/>now:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>var);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Var&apos;s<sp/>location<sp/>is<sp/>now:<sp/>%p\n&quot;</highlight><highlight class="normal">,<sp/>&amp;pointer);</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>function3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pointer<sp/>Arithmetic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="main_8c_1ad4420fbfa179acc83a8bdd096c973bdf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8c_1ad4420fbfa179acc83a8bdd096c973bdf" kindref="member">function3</ref>()</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arrayInt[]<sp/>=<sp/>{<sp/>10,<sp/>20,<sp/>30<sp/>};<sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>arrayInt_Size<sp/>=<sp/>3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Will<sp/>point<sp/>to<sp/>the<sp/>first<sp/>array<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>ptr<sp/>=<sp/>&amp;arrayInt;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>arrayInt_Size;<sp/>i++)<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Remember,<sp/>*ptr<sp/>gets<sp/>the<sp/>value<sp/>in<sp/>the<sp/>memory<sp/>location<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Value<sp/>of<sp/>arrayInt[%d]<sp/>=<sp/>%d<sp/><sp/>location<sp/>=<sp/>%p\n&quot;</highlight><highlight class="normal"><sp/>,<sp/>i,<sp/>*ptr,<sp/>&amp;arrayInt[i]);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/>function4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Function<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="main_8c_1aca2fa6e3b167a9cbdee5daa034b62184" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8c_1aca2fa6e3b167a9cbdee5daa034b62184" kindref="member">function4</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value2)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>value1<sp/>+<sp/>value2;<sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Result<sp/>:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>result);</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>function5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/>calculator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="main_8c_1a2be2220f009becf48eeee2c6fc480f5e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a2be2220f009becf48eeee2c6fc480f5e" kindref="member">function5</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(*opp)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>(*opp)(value1,<sp/>value2);<sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;The<sp/>result<sp/>from<sp/>the<sp/>operation:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>result);<sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//Adds<sp/>two<sp/>values<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="main_8c_1ad3090520f83f07c8745e95ccd4903106" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8c_1ad3090520f83f07c8745e95ccd4903106" kindref="member">add</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num2)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>num1<sp/>+<sp/>num2;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//Subtracts<sp/>two<sp/>values<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="main_8c_1a2d6431c1cdb15536766d324b8799b2ea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a2d6431c1cdb15536766d324b8799b2ea" kindref="member">sub</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num2)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>num1<sp/>-<sp/>num2;</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/Repos/C-Tutorial/visual studio/06-pointers/06-pointers/main.c"/>
  </compounddef>
</doxygen>
